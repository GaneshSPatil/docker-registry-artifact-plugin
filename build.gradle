/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply from: 'plugin-common.gradle'

project.ext.pluginVersion = '0.0.1'
project.ext.fullVersion = project.distVersion ? "${project.pluginVersion}-${project.distVersion}" : project.pluginVersion

group = 'cd.go.artifact.docker'
version = project.fullVersion

project.ext.pluginDesc = [
        id         : 'cd.go.artifact.docker.registry',
        version    : project.version,
        goCdVersion: '18.1.0',
        name       : 'Artifact plugin for docker',
        description: 'Plugin allows to push/pull docker image from public or private docker registry',
        vendorName : 'GoCD Contributors',
        vendorUrl  : 'https://github.com/gocd/docker-artifact-plugin'
]

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'com.spotify', name: 'docker-client', version: '8.10.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.3.0'
    testCompile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
    testCompile group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
}

processResources {
    from("src/main/resource-templates") {
        filesMatching('plugin.xml') {
            expand project.pluginDesc
        }

        filesMatching('plugin.properties') {
            expand project.pluginDesc
        }
    }
}

jar {
    from(configurations.compile) {
        into "lib/"
    }

    from(sourceSets.main.java) {
        into "/"
    }
}

tasks.withType(Jar) { jarTask ->
    preserveFileTimestamps = false
    reproducibleFileOrder = true

    ['MD5', 'SHA1', 'SHA-256'].each { algo ->
        jarTask.outputs.files("${jarTask.archivePath}.${algo}")
        jarTask.doLast {
            ant.checksum file: jarTask.archivePath, format: 'MD5SUM', algorithm: algo
        }
    }

    manifest {
        attributes(
                'Go-Version': project.pluginDesc.goCdVersion,
                'Plugin-Revision': project.pluginDesc.version,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Source-Compatibility': project.sourceCompatibility,
                'Target-Compatibility': project.targetCompatibility
        )
    }
}